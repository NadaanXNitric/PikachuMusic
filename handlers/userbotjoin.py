from pyrogram import Client, filters
from pyrogram.errors import UserAlreadyParticipant
import asyncio
from helpers.decorators import authorized_users_only, errors
from callsmusic.callsmusic import client as USER
from config import SUDO_USERS


@Client.on_message(filters.command(["userbotjoin"]) & ~filters.private & ~filters.bot)
@authorized_users_only
@errors
async def addchannel(client, message):
    chid = message.chat.id
    try:
        invitelink = await client.export_chat_invite_link(chid)
    except:
        await message.reply_text(
            "<b>P…™·¥ã·¥Ä P…™·¥ã·¥Ä, ·¥ç·¥Ä·¥ã·¥á ·¥ç·¥á ·¥Äs ·¥Ä·¥Ö·¥ç…™…¥ “ì…™ Äs·¥õ !!</b>",
        )
        return

    try:
        user = await USER.get_me()
    except:
        user.first_name = "helper"

    try:
        await USER.join_chat(invitelink)
        await USER.send_message(message.chat.id, "ü§ñ: P…™·¥ã·¥Ä P…™·¥ã·¥Ä, ·¥Ä·¥ç ·¥ä·¥è…™…¥·¥á·¥Ö  ú·¥á Ä·¥á “ì·¥è Ä ·¥ò ü·¥Ä è…™…¥·¥õ ·¥ç·¥ús…™·¥Ñ ·¥è…¥ ·¥†·¥è…™·¥Ñ·¥á ·¥Ñ ú·¥Ä·¥õ.")
    except UserAlreadyParticipant:
        await message.reply_text(
            "<b>P…™·¥ã·¥Ä P…™·¥ã·¥Ä,  ú·¥á·¥Ä ü·¥ò·¥á Ä  Ä·¥á·¥Ä·¥Ö è …™…¥  è·¥è·¥ú Ä ·¥Ñ ú·¥Ä·¥õ  ô·¥Ä ô è.</b>",
        )
    except Exception as e:
        print(e)
        await message.reply_text(
            f"<b>P…™·¥ã·¥Ä P…™·¥ã·¥Ä, ‚õë “ì ü·¥è·¥è·¥Ö ·¥°·¥Ä…™·¥õ ·¥á Ä Ä·¥è Ä ‚õë\n{user.first_name} ·¥Ñ·¥Ä…¥'·¥õ ·¥ä·¥è…™…¥  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ö·¥ú·¥á ·¥õ·¥è ·¥ç·¥Ä…¥ è ·¥ä·¥è…™…¥  Ä·¥á«´·¥ú·¥ás·¥õ “ì·¥è Ä ·¥ús·¥á Ä ô·¥è·¥õ !! ·¥ç·¥Ä·¥ãs s·¥ú Ä·¥á ·¥õ ú·¥á ·¥ús·¥á Ä …™s …¥·¥è·¥õ  ô·¥Ä…¥…¥·¥á·¥Ö …™…¥ ·¥õ ú·¥á …¢ Ä·¥è·¥ú·¥ò."
                        f"\n\n·¥è Ä ·¥Ä·¥Ö·¥Ö @{ASSISTANT_NAME} ·¥ç·¥Ä…¥·¥ú·¥Ä ü ü è ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò ·¥Ä…¥·¥Ö ·¥õ Ä è ·¥Ä…¢·¥Ä…™…¥.</b>",
        )
        return
    await message.reply_text(
        "<b>P…™·¥ã·¥Ä P…™·¥ã·¥Ä,  ú·¥á ü·¥ò·¥á Ä ·¥ús·¥á Ä ô·¥è·¥õ ·¥ä·¥è…™…¥·¥á·¥Ö  è·¥è·¥ú Ä ·¥Ñ ú·¥Ä·¥õ.</b>",
    )


@USER.on_message(filters.group & filters.command(["userbotleave"]))
@authorized_users_only
async def rem(USER, message):
    try:
        await USER.leave_chat(message.chat.id)
    except:
        await message.reply_text(
            f"<b>P…™·¥ã·¥Ä P…™·¥ã·¥Ä, ·¥ús·¥á Ä ·¥Ñ·¥è·¥ú ü·¥Ö'…¥·¥õ  ü·¥á·¥Ä·¥†·¥á  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò !! ·¥ç·¥Ä è  ô·¥á “ì ü·¥è·¥è·¥Ö·¥°·¥Ä…™·¥õs."
            "\n\n·¥è Ä ·¥ç·¥Ä…¥·¥ú·¥Ä ü ü è ·¥ã…™·¥Ñ·¥ã ·¥ç·¥á “ì Ä·¥è·¥ç ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò.</b>",
        )
        return
    
@Client.on_message(filters.command(["userbotleaveall"]))
async def bye(client, message):
    if message.from_user.id in SUDO_USERS:
        left=0
        failed=0
        lol = await message.reply("P…™·¥ã·¥Ä P…™·¥ã·¥Ä, ·¥Äss…™s·¥õ·¥Ä…¥·¥õ  ü·¥á·¥Ä·¥†…™…¥·¥õ ·¥Ä ü ü ·¥Ñ ú·¥Ä·¥õs.")
        async for dialog in USER.iter_dialogs():
            try:
                await USER.leave_chat(dialog.chat.id)
                left = left+1
                await lol.edit(f"P…™·¥ã·¥Ä P…™·¥ã·¥Ä, ·¥Äss…™s·¥õ·¥Ä…¥·¥õ  ü·¥á·¥Ä·¥†…™…¥…¢...  ü·¥á“ì·¥õ : {left} ·¥Ñ ú·¥Ä·¥õs. “ì·¥Ä…™ ü·¥á·¥Ö : {failed} ·¥Ñ ú·¥Ä·¥õs.")
            except:
                failed=failed+1
                await lol.edit(f"Assistant leaving...  ü·¥á“ì·¥õ : {left} ·¥Ñ ú·¥Ä·¥õs. “ì·¥Ä…™ ü·¥á·¥Ö : {failed} ·¥Ñ ú·¥Ä·¥õs.")
            await asyncio.sleep(0.7)
        await client.send_message(message.chat.id, f" ü·¥á“ì·¥õ : {left} ·¥Ñ ú·¥Ä·¥õs. “ì·¥Ä…™ ü·¥á·¥Ö : {failed} ·¥Ñ ú·¥Ä·¥õs.")
